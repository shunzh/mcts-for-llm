{
    "summary": "This code imports gym and Dyna-Gym's UCT agent, creates an environment (NSCartPole-v0), initializes a UCT agent with 100 rollouts, runs the agent for 100 timesteps, renders and prints state if verbose is True, and finishes the episode when done is True.",
    "details": [
        {
            "comment": "This code imports gym and Dyna-Gym's UCT agent, creates an environment (NSCartPole-v0), initializes a UCT agent with 100 rollouts, runs the agent for 100 timesteps, renders and prints state if verbose is True, and finishes the episode when done is True.",
            "location": "\"/media/root/Prima/works/mcts-for-llm/docs/src/examples/uct_nscartpole_v0.py\":0-24",
            "content": "import gym\nimport dyna_gym.agents.uct as uct\n### Parameters\nenv = gym.make('NSCartPole-v0')\nagent = uct.UCT(\n    action_space=env.action_space,\n    rollouts=100\n)\ntimesteps = 100\nverbose = False\n### Run\nenv.reset()\ndone = False\nfor ts in range(timesteps):\n    __, __, done, __ = env.step(agent.act(env,done))\n    if verbose:\n        env.print_state()\n    env.render()\n    if ts+1 == timesteps:\n        print(\"Successfully reached end of episode ({} timesteps)\".format(ts+1))\n    if done:\n        print(\"Episode finished after {} timesteps\".format(ts+1))\n        break"
        }
    ]
}